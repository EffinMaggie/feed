BINARIES:=bin/feedd bin/feed
INCLUDES:=$(wildcard include/feed/*.h)
MANPAGES:=$(addprefix share/man/man1/,$(notdir $(wildcard src/*.1)))
INSTALLTARGETS:=$(BINARIES) $(INCLUDES) $(MANPAGES) include/feed/data-feed.h
TARGETS:=$(BINARIES) include/feed/data-feed.h
ROOT:=
DESTDIR:=$(ROOT)/usr/local

# programmes
SQLITE3:=sqlite3
INSTALL:=install
CXX:=clang++
CC:=clang
PKGCONFIG:=pkg-config
INSTALL:=install

# paths, etc
INCLUDES:=include
LIBRARIES:=sqlite3 libcurl libxml-2.0

# boost libraries
BOOSTLIBDIR:=
BOOSTLIBRARIES:=regex

# flags
CCFLAGS:=$(addprefix -I,$(INCLUDES)) $(addprefix -I,$(BOOSTLIBDIR))
PCCFLAGS:=$(shell $(PKGCONFIG) --cflags $(LIBRARIES))
PCLDFLAGS:=$(shell $(PKGCONFIG) --libs $(LIBRARIES)) $(addprefix -lboost_,$(BOOSTLIBRARIES))
CXXFLAGS:=-O3
CFLAGS:=
LDFLAGS:=
CXXR:=$(CXX) $(CCFLAGS) $(PCCFLAGS) $(CXXFLAGS) $(LDFLAGS) $(PCLDFLAGS)
CR:=$(CC) $(CCFLAGS) $(PCCFLAGS) $(CFLAGS) $(LDFLAGS) $(PCLDFLAGS)

# meta rules
all: $(TARGETS)

.SECONDARY:

clean:
	rm -f data.feed* $(TARGETS)

install: $(addprefix $(DESTDIR)/,$(INSTALLTARGETS)) $(ROOT)/etc/profile.d/feed.sh

uninstall:
	rm -f $(addprefix $(DESTDIR)/,$(INSTALLTARGETS)) $(ROOT)/etc/profile.d/feed.sh

$(DESTDIR)/%: %
	$(INSTALL) -D $< $@

$(DESTDIR)/share/man/man1/%.1: src/%.1
	$(INSTALL) -D $< $@

$(ROOT)/etc/profile.d/%: src/%
	$(INSTALL) -D $< $@

data.feed: src/feed.sql
	rm -f $@*
	$(SQLITE3) $@ < $<

bin/.volatile:
	mkdir $(dir $@); true
	touch $@

bin/%: src/%.c++ bin/.volatile include/feed/data-feed.h
	$(CXXR) $(CXXFLAGS) $< -o $@

include/feed/data-%.h: src/%.sql
	echo '/* autogenerated data file, based on $< */' > $@
	echo "namespace feed { namespace data { static const char $*[] = \"$$(sed -e ':a;N;$$!ba;s/\n/\\\\n/g' -e 's/"/\\"/g' $<)\"; } }" >> $@
